Safeguarding Information

Moduel 1: Understanding Assets, Threats, and Vulnerabilities


Asset – Anything valuable that needs protection (e.g., data, hardware, software).
Threat – A potential danger to an asset (e.g., hackers, malware, insider threats).
Vulnerability – A weakness that can be exploited (e.g., outdated software, weak passwords).



B. Encryption & Data Protection
Encryption: Converts data into unreadable code (AES-256 is industry standard).

Data at rest: Encrypt files on storage devices.
Data in transit: Use TLS/SSL for secure transmission over networks.
Data in use

data lifecycle
Collect
Store
Use
Archive
Destroy

Security Controls
Technical
Operation
managerial

Data goveranance
Data owner: the person that decides who can access, edit, use, or destroy their information.
Data custodian: anyone or anything that's responsible for the safe handling, transport, and storage of information.
Data steward: the person or group that maintains and implements data governance policies set by an organization.PII is any information used to infer an individual's identity. Personally identifiable information, or PII, refers to information that can be used to contact or locate someone.

PII (personaly Indetificable Information_: anything used to contact you
PHI (protected health information):  HIPAA
SPII (Sensitive PII) bank account, login, SNN
 > may be needed at specific moments: should be recorded when, why and who

Information privacy refers to the protection of unauthorized access and distribution of data.
Information security (InfoSec) refers to the practice of keeping data in all states away from unauthorized users.

-
Module 2: Encryption

Encryption: the process of converting data from a readable format to an encoded format
Public key infrastructure (PKI): an encryption framework that secures the exchange of online information
Cipher: an algorithm that encrypts information

Symmetric encryption is the use of a single secret key to exchange information. 
  Because it uses one key for encryption and decryption, the sender and receiver must know the secret key to lock or unlock the cipher.
  - requires a secure way to share the key between sender and receiver
  - faster and efficient for large amounts of data
 > Triple DES (3DES): applies DES encryption x3 for enhances security (168 bit key)
 > AES (Advanced Encryption Standards) uses 128, 192, or 256-bit keys

Asymmetric encryption is the use of a public and private key pair for encryption and decryption of data. 
  Public key is used to encrypt data, and the private key decrypts it. 
  CA (Certificare Authority) issues digital certificates, which verify the identity of a user or website and contain the public key
  private key is securely generated and stored by the recipient.
  > RSA

🔹 Public Key (🔓) → Open, shared freely, only encrypts data
🔹 Private Key (🔑) → Secret, stays with the bank, only decrypts data (never sent over the internet)

> Symmetric encryption: The encryption key must be shared between sender and receiver
    An attacker could intercepts the key during transmission and can decrypt everything
[
1️⃣ Browser requests a secure connection (https://)
2️⃣ Server sends RSA public key (verified by a CA)
3️⃣ Browser generates a random AES key
4️⃣ AES key is encrypted using RSA public key
5️⃣ Encrypted AES key is sent to the server
6️⃣ Server decrypts AES key with its RSA private key]
-
Generating keys
These algorithms must be implemented when an organization chooses one to protect their data. 
OpenSSL is an open-source command-line tool. It generates public & private keys for encryption.
Also used to verify digital certificates in Public Key Infrastructure (PKI) (e.g., HTTPS, SSL/TLS).

Obscurity is not security: A strong algorithm should remain secure even if its details are public—only the private key must be secret.
-
keys are vulnerable to getting lost and stolen

Hash function: One-way encryption that produces a fixed-size hash value; cannot be decrypted.
 Even a small change in input produces a completely different hash, making it ideal for data integrity checks.
 Each input is then first hashed then Hash values are compared (which can be quickly done by computers)
accomplished authentication and non-repudiation (information authenticity cannot be denied)


Hash Collisions
Hash collisions: Occur when different inputs produce the same hash value, posing a security risk (e.g., impersonation).
  Hash algorithms map any input, regardless of its length, into a fixed-size value of letters and numbers since there’s only a finite set of available outputs!
> Because hashes are used for authentication, a hash collision is similar to copying someone’s identity. 
>> Attackers can carry out collision attacks to fraudulently impersonate authentic data.

longer hashes is more secure: SHA (Secure Hashing Alogrithm) family
Numbers besides each SHA function indicate the size of its hash value in bits. Except for SHA-1, which produces a 160-bit digest (NIST approved)
Five functions make up the SHA family of algorithms:

SHA-1
SHA-224
SHA-256
SHA-384
SHA-512

Secure password storage: Passwords are hashed and stored; comparison is done with the hashed value to verify authenticity.
These are secured even if the data base is compromised due to hashing

Rainbow tables
A rainbow table is a file of pre-generated hash values and their associated plaintext. 
Hackers use them

Salting is an additional safeguard that's used to strengthen hash functions. 
A salt is a random string of characters that's added to data before it's hashed. The additional characters produce a more unique hash value, making salted data resilient to rainbow table attacks.

virusTotal







































