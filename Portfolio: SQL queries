SQL challenges that ramp up using filters, operators and Join 
Task 1. Retrieve employee device data

SELECT *
FROM machines;
+--------------+------------------+----------------+---------------+-------------+
| device_id    | operating_system | email_client   | OS_patch_date | employee_id |
+--------------+------------------+----------------+---------------+-------------+
| a184b775c707 | OS 1             | Email Client 1 | 2021-09-01    |        1156 |
| a192b174c940 | OS 2             | Email Client 1 | 2021-06-01    |        1052 |
| a305b818c708 | OS 3             | Email Client 2 | 2021-06-01    |        1182 |
| a317b635c465 | OS 1             | Email Client 2 | 2021-03-01    |        1130 |
| a320b137c219 | OS 2             | Email Client 2 | 2021-03-01    |        1000 |

Complete the query to return only the device_id, operating_system, and OS_patch_date columns from the machines table
SELECT device_id, operating_system, OS_patch_date
FROM machines;

+--------------+------------------+---------------+
| device_id    | operating_system | OS_patch_Date |
+--------------+------------------+---------------+
| a184b775c707 | OS 1             | 2021-09-01    |
| a192b174c940 | OS 2             | 2021-06-01    |
| a305b818c708 | OS 3             | 2021-06-01    |
| a317b635c465 | OS 1             | 2021-03-01    |
| a320b137c219 | OS 2             | 2021-03-01    |


Task 2. Investigate login activity
First, you need to investigate the locations where login attempts were made to ensure that they’re in expected areas (the United States, Canada, or Mexico).


MariaDB [organization]> SELECT event_id, country
    -> from log_in_attempts;
+----------+---------+
| event_id | country |
+----------+---------+
|        1 | CAN     |
|        2 | CAN     |

Next, you need to check if login attempts were made outside of the organization's working hours.
MariaDB [organization]> SELECT username, login_date, login_time from log_in_attempts;
+----------+------------+------------+
| username | login_date | login_time |
+----------+------------+------------+
| jrafael  | 2022-05-09 | 04:56:27   |
| apatel   | 2022-05-10 | 20:27:27   |
| dkot     | 2022-05-09 | 06:47:41   |


Task 3. Order login attempts data
First, you need to sort the information by date.

MariaDB [organization]> SELECT *
    -> FROM log_in_attempts
    -> ORDER BY login_date;
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|      145 | ivelasco | 2022-05-08 | 09:06:02   | CANADA  | 192.168.39.196  |       1 |

Now, you need to further organize the previous results by ordering them by login_time.

MariaDB [organization]> SELECT * FROM log_in_attempts ORDER BY login_date,login_time;
+----------+----------+------------+------------+---------+-----------------+---------+



Activity 2
Activity 2
Filter SQL query

First, you’ll list all organization machines and their operating systems. 
select device_id, operating_system FROM machines;
+--------------+------------------+
| device_id    | operating_system |
+--------------+------------------+
| a184b775c707 | OS 1             |
| a192b174c940 | OS 2             |


Second, you’ll list all machines with the operating system OS 2. 

select device_id, operating_system FROM machines 
    -> where operating_system = "OS 2";
+--------------+------------------+
| device_id    | operating_system |
+--------------+------------------+
| a192b174c940 | OS 2             |
| a320b137c219 | OS 2             |
| a821b452c176 | OS 2             |


Third, you’ll list all the employees in the Finance and Sales departments. 
MariaDB [organization]> SELECT *
    -> FROM employees
    -> WHERE department = "FINANCE";
+-------------+--------------+----------+------------+-------------+
| employee_id | device_id    | username | department | office      |
+-------------+--------------+----------+------------+-------------+
|        1003 | d394e816f943 | sgilmore | Finance    | South-153   |
|        1007 | h174i497j413 | wjaffrey | Finance    | North-406   |


MariaDB [organization]> SELECT * FROM employees WHERE department = "sales"; 
+-------------+--------------+----------+------------+-------------+
| employee_id | device_id    | username | department | office      |
+-------------+--------------+----------+------------+-------------+
|        1009 | NULL         | lrodriqu | Sales      | South-134   |
|        1011 | l748m120n401 | drosas   | Sales      | South-292   |
|        1024 | y976z753a267 | iuduike  | Sales      | South-215   |


Fourth, you’ll obtain information about machines.
Write a query to identify which employee uses the office in 'South-109'. 
(The data must be returned from the office column in the employees table.)

SELECT * FROM employees WHERE office = "South-109";
+-------------+--------------+----------+------------+-----------+
| employee_id | device_id    | username | department | office    |
+-------------+--------------+----------+------------+-----------+
|        1010 | k242l212m542 | jlansky  | Finance    | South-109 |
+-------------+--------------+----------+------------+-----------+

Modify the query you used in the previous step so that it returns information on all the 
employees in the 'South' building. Use the LIKE operator with % in this query.
SELECT * FROM employees WHERE office like "South%";
+-------------+--------------+----------+------------------------+-----------+
| employee_id | device_id    | username | department             | office    |
+-------------+--------------+----------+------------------------+-----------+
|        1003 | d394e816f943 | sgilmore | Finance                | South-153 |
|        1004 | e218f877g788 | eraab    | Human Resources        | South-127 |



| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|      117 | bsand    | 2022-05-08 | 00:19:11   | USA     | 192.168.197.187 |       0 |
|       92 | pwashing | 2022-05-08 | 00:36:12   | US      | 192.168.247.219 |       0 |



-
Activity 3
First, you’ll retrieve login events made after a certain date.
retrieve data for login attempts made after '2022-05-09'
SELECT * 
FROM log_in_attempts 
WHERE login_date > "2022-05-09";
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|        2 | apatel   | 2022-05-10 | 20:27:27   | CAN     | 192.168.205.12  |       0


Second, you’ll narrow the focus of the search to filter logins in a date range. 
 Use the BETWEEN and AND operators to return results between '2022-05-09' and '2022-05-11'

SELECT * FROM log_in_attempts WHERE login_Date BETWEEN "2022-05-09" AND "2022-05-11";
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|        1 | jrafael  | 2022-05-09 | 04:56:27   | CAN     | 192.168.243.140 |       1


Third, you’ll investigate logins that were made at certain times. 
What time was the earliest login attempt between 06:00:00 and 07:00:00?

SELECT * FROM log_in_attempts WHERE login_time BETWEEN "06:00:00" AND "07:00:00" 
    -> ORDER BY login_time;
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|      182 | lyamamot | 2022-05-10 | 06:01:31   | USA     | 192.168.106.52  |       0

Finally, you’ll filter login attempts based on their event IDs.
return only the event_id, username, and login_date fields from the log_in_attempts table.

Write a query to return login attempts with event_id greater than or equal to 100.
SELECT event_id, username, login_date FROM log_in_attempts WHERE event_id >= 100;
+----------+----------+------------+
| event_id | username | login_date |
+----------+----------+------------+
|      100 | tmitchel | 2022-05-12 |
|      101 | sbaelish | 2022-05-08 |
|      102 | jreckley | 2022-05-09 |

--
Activity 4
First, you’ll retrieve all failed login attempts after business hours. 
SELECT * FROM log_in_attempts WHERE login_time > "18:00" AND success = "FALSE";
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|        2 | apatel   | 2022-05-10 | 20:27:27   | CAN     | 192.168.205.12  |       0 |
|       18 | pwashing | 2022-05-11 | 19:28:50   | US      | 192.168.66.142  |       0

Second, you’ll retrieve all login attempts that occurred on specific dates. 
Your team is investigating a suspicious event that occurred on '2022-05-09'. 
You want to retrieve all login attempts that occurred on this day and the day before 
('2022-05-08').

SELECT * FROM log_in_attempts WHERE login_date = "2022-05-09" OR login_date <= "2022-05-08";
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|        1 | jrafael  | 2022-05-09 | 04:56:27   | CAN     | 192.168.243.140 |       1 |
|        3 | dkot     | 2022-05-09 | 06:47:41   | USA     | 192.168.151.162 |       1 |

Third, you’ll retrieve logins that didn't originate in Mexico.
Now, your team is investigating logins that did not originate in Mexico, and you need to find this information. 
Note that the country field includes entries with 'MEX' and 'MEXICO'

SELECT *
    -> FROM log_in_attempts
    -> WHERE NOT country like "MEX%";
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|        1 | jrafael  | 2022-05-09 | 04:56:27   | CAN     | 192.168.243.140 |       1 |
|        2 | apatel   | 2022-05-10 | 20:27:27   | CAN     | 192.168.205.12  |       0


Fourth, you’ll retrieve information about certain employees in the Marketing department. 
our team is updating employee machines, and you need to obtain the information about employees in the 'Marketing' 
department who are located in all offices in the East building (such as 'East-170' or 'East-320').

SELECT * FROM employees WHERE department = "Marketing" AND office like "East%";
+-------------+--------------+----------+------------+----------+
| employee_id | device_id    | username | department | office   |
+-------------+--------------+----------+------------+----------+
|        1000 | a320b137c219 | elarson  | Marketing  | East-170 |
|        1052 | a192b174c940 | jdarosa  | Marketing  | East-195 |

Fifth, you’ll retrieve information about employees in the Finance or the Sales department. 
Now, your team needs to perform a different update to the computers of all employees in the 
Finance or the Sales department, and you need to locate information on these employees.

SELECT * FROM employees WHERE department = "Finance" OR department = "Sales";
+-------------+--------------+----------+------------+-------------+
| employee_id | device_id    | username | department | office      |
+-------------+--------------+----------+------------+-------------+
|        1003 | d394e816f943 | sgilmore | Finance    | South-153   |
|        1007 | h174i497j413 | wjaffrey | Finance    | North-406   |
|        1008 | i858j583k571 | abernard | Finance    | South-170   |
|        1009 | NULL         | lrodriqu | Sales      | South-134   |


Finally, you’ll obtain information about employees who are not in the Information Technology department.

SELECT * FROM employees WHERE NOT department = "Information Technology";
+-------------+--------------+----------+-----------------+-------------+
| employee_id | device_id    | username | department      | office      |
+-------------+--------------+----------+-----------------+-------------+
|        1000 | a320b137c219 | elarson  | Marketing       | East-170    |



--
Activity 5:
First, you’ll retrieve login events made after '2022-05-09'

 SELECT * FROM log_in_attempts WHERE login_date > "2022-05-09";
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|        2 | apatel   | 2022-05-10 | 20:27:27   | CAN     | 192.168.205.12  |       0


Second, you’ll narrow the focus of the search to filter logins in a date range. 
Login attempts made between '2022-05-09' and '2022-05-11'

SELECT * FROM log_in_attempts WHERE login_date BETWEEN "2022-05-09" AND "2022-05-11";
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|        1 | jrafael  | 2022-05-09 | 04:56:27   | CAN     | 192.168.243.140 |       1


Modify the query to return only login attempts with event_id between 100 and 150.
What is the username of the seventh result returned by your query

SELECT * FROM log_in_attempts WHERE event_id BETWEEN 100 AND 150 
    -> Limit 7;
+----------+----------+------------+------------+---------+-----------------+---------+
| event_id | username | login_date | login_time | country | ip_address      | success |
+----------+----------+------------+------------+---------+-----------------+---------+
|      100 | tmitchel | 2022-05-12 | 16:02:03   | MEXICO  | 192.168.97.225  |       0 |
|      101 | sbaelish | 2022-05-08 | 12:01:22   | US      | 192.168.145.158 |       0 |
|      102 | jreckley | 2022-05-09 | 16:51:44   | MEX     | 192.168.108.13  |       1 |
|      103 | jhill    | 2022-05-11 | 09:10:54   | US      | 192.168.60.153  |       0 |
|      104 | asundara | 2022-05-11 | 18:38:07   | US      | 192.168.96.200  |       0 |
|      105 | cjackson | 2022-05-12 | 19:36:42   | CAN     | 192.168.247.153 |       1 |
|      106 | tmitchel | 2022-05-12 | 06:15:41   | MEXICO  | 192.168.3.252   |       1










