Computing Basics: OS (linux) and interact with organization's data (SQL)


Module 1: Operating_Systems

Common_OS_Types
  Windows, macOS, Linux, ChromeOS, Android, iOS
    Open-source vs. Closed-source (Security & Vulnerabilities)
Legacy Software (Embedded systems & Critical hardware)

OS_Functions
  Interface between hardware & user
  Runs multiple applications efficiently
  Manages system resources (Memory, CPU, Storage, I/O)
  OS Security: Protects against vulnerabilities

OS_Architecture
  Process Flow: User → Application → OS → Hardware
  Boot Process: BIOS/UEFI → Bootloader → OS
Vulnerabilities: Security risks in boot processes & OS interactions

-
Linux_In_Security
Why_Linux
  Common in cybersecurity & IT operations
  CLI vs. GUI usage for security tasks

Security_Use_Cases
  Managing user access & permissions
  Configuring & maintaining firewalls

System_Resources
Resource_Allocation
  OS manages CPU, Memory, Storage, and I/O
  Task Manager to monitor system resource usage

Performance_Issues
  Slow performance? Malware or inefficient resource allocation
  Identifying resource bottlenecks

-
GUI v CLI

User can interact with the OS via a GUI or CLI
GUI: graphic user interface
- start menu: program groups
- task bar: launching programs
- Desktop: icons & shortcuts

CL: Comman line interface
Commands to communicate with the OS
- flexible and control over commands 
- Efficient / fast
- History of actions in a history file
- multiple tasks can be done simulataneously
> more powerful than GUI

API: designing the interface in which a develop interacts with the machine


---
Module 2: Linux
Architecure of Linux
Distributions of Linux
Shell


-
Linux history
Open source made in two parts
Linus improved UNIX OS to make it opern source and available to everyone
- revolutionary: Linux kernel
Richard Stalmen worked on GNU based on UNIX OS as well
- free and open to anyone and implemented the kernel

Open source: use share and dsitribute OS freely under GNU license
Developers can collaborate and advance security

Linux has many dsitros 600+
Linux is used to investigate an error log and verify access and authentication in IAM
Different distros may be used for different task / user needs

-
Architecure of Linux
Elements in Linux
User: Person ineracting with computer
  Multi-user system: more than one user can use the system's resources at the same time
application: Program that performs a task
  Nano: text editor application
  installed via package managers
shell:  command-line interpreter that takes user input and translates it into actions for the OS
  input command and outputs results
FHS (Filesytem Hierarcy Standard)
  Component of the Linux OS that organizes the data into a tree directory
  (file cabinnent to store and find data when called upon)
Kernel: Core of the OS that manages processes, memory, and hardware efficiently
  communicates with the hardware to execute the OS sent by the shell
  uses drivers to enable applications to execute task and runs efficiently
Daemons: Background Processes
  System services that run in the background (e.g., network management, logging, security)
  They start at boot and keep running, unlike regular applications that only run when launched by a user
  Examples: sshd (Secure Shell Daemon for remote login) / cron (automates scheduled tasks)
Hardware: physical components
  Internal hardware: components required to run computer (CPU, RAM, hard drive)
  external hardwaree: mouse and keyboard

-
How They Work Together
User enters a command in the Shell
Shell interprets the command and sends it to the Kernel
Kernel communicates with Hardware to execute the task
Daemons may assist in managing background operations (e.g., system logs, networking)
Files and Applications retrieve or store data in the Filesystem


-
linux distributions
distros created from the open source kernal
each has its own preinstalled programs, user interfaces, and more

Parent distributions
Red Hat
Slackware
Debian

Kali Linux
Purpose: Designed for offensive security, penetration testing, and digital forensics
Base OS: Derived from Debian
Best Practice: Should be used in a virtual machine (VM) to prevent system 
  corruption and allow easy rollbacks

Pen tester: Simulate an attack to indentified vulnerabilites
- metasploit: look and exploit vulnerabilites on machines
- burp suite: test for weaknesses in web applications
- john the ripper: test password

Digital Forensics:
Collecting and analyzing data to derrmine what has happened after an attack
looking at network activity
- WireShark: GUI network taffic analyzer (record for details)
- tcpdump: CLI command for packet capturing (fast real time packets)
- Autopsy: used to analyze hard drives and smartphones


Ubuntu
Purpose: Ubuntu is also widely used for cloud computing
Base OS: Derived from Debian

Parrot
Purpose: beginner friendly GUI pen testing and digital forensics
Base OS: Derived from Debian

Red hat enterprise Linux: 
Purpose: built and supported for enterprise use where you pay for dedicated 
  support team for customers to call about issues.

Almalinux
Purpose: community driven linux distro to replace CentOS8 to keep apps
  and configurations continue functioning as CentOS 

-

Application installed via packet manager
package manager is a tool that helps users install, manage, and remove packages or apps. 
A package is a piece of software that can be combined with other packages to form an application.


Types of Package Managers:
Each packet manager work with heac distro depending on their parent

File extension names
Red Hat Packet Manager (RPM): .rpm 
Debian-derived Linux distributions (dpkg): .deb

Package managment tools:
manage, search, and install packages
APT (Advanced Package Tool): debiam derived
YUM (Yellowdog Updater Modified)

-
Package Manager (dpkg, rpm): Like the kitchen staff who prepare individual ingredients (basic package handling).
Package Management Tool (apt, dnf): Like a restaurant waiter who takes your order, ensures you get the right dish, and brings everything together smoothly (handles dependencies and repositories).

You place an order (sudo apt install vlc).
The waiter (apt) checks what ingredients are needed and tells the kitchen (dpkg) to prepare them.
The kitchen (dpkg) cooks the meal, making sure all necessary ingredients (dependencies) are included.
The waiter (apt) serves the dish, ensuring everything is ready for you to enjoy.


Package Management Tool (apt) = Project Manager
  Orders materials (packages)
  Ensures workers (package manager) have what they need
  Manages dependencies (making sure everything fits together)
 
Package Manager (dpkg) = Construction Worker
  Installs materials (puts files in the correct place)
  Follows orders from the Project Manager (apt)
  Does not handle dependencies—it just does what it's told

---
Module 2 Shell

Shell
Command line interpreter
provides CLI to interct with the OS

different type of Shells
Bourne-Again Shell (bash)
C Shell (csh)
Korn Shell (ksh)
Enhanced C shell (tcsh)
Z Shell (zsh)

Ksh and bash use $ to indicate  where user types there command
Zsh uses % to indicate where users type

> Bash is default shell in most linux distros
  user friendly 

-
Commuication with the shell
1) Standard input: information received by the OS via the Command Line
2) Standard Output: info returned from the OS through the shell
3) standard error: error message returned by the OS through the shell
    mispelled command or inappropriate permissions


Commands:
echo: outputs a specified string of text 
  $ echo hello 
string data: order sequence of characters

---
Module 3: Navigate the linux file system (BASH)

Security analyst
work with server logs
navigate, manage, and analyze files remotely
Verify and configure users and group access
Give authorization and set file permissions

FHS (Filesystem Hierarchy Standard):
Component of the OS that organizes data in tree format

Root Directory: /
Highest level directory in Linux

Branches 
/Home

> standard FHS directories
/home
  each user in the system gets their own home directory
/bin
  bin / binary contrains executable files
  executable fiels: series of commands a computer needs to follow to run programs & perform other functions
/etc
  stires the system's configuratiion files
/tmp
  stores many temporary files
  commonly used by attackers because anyone in the system can modify these files
/mnt
  "mount" and stores media, such as USB drives and hard drives

Command <argument>
Argument
  speciifc information needed by a command

-
[Commands]
man hier: learn more about FHS and its standard directories
pwd: print the working directorory

whoami: user you are workin as

ls: list files and directories in current working directory
- Files are .txt 
- Directories are further branches
> I can ls the subdirectory I want to look into even if I am not there

cd: to change directories
> cd.. to go up ne level

cat: displays file content
head: displays first 10 lines (if file is big) 
tail: to read the most recent information in a log file
less: returns the content of a file one page at a time (use keyboard to move. space = +1 page; q = quit)
- 
Quick notes
You can navigate to specific subdirectories using their absolute or relative file paths
  The absolute file path is the full file path, which starts from the root. 
    /home/analyst/projects
  relative file path is the file path that starts from a user's current directory
    ../projects
     ~/logs (~ showcases this is under user's home directory)

---
Manage content in Bash

Filter: searching system for specific information
  EX: It is determined this malware contains a piece of characters we then search our files for


grep: search inside file and containing a pattern of string and returns the line
<"specified string" file>

"|" Piping:
  sends a standard output of one command as the stanard input to another command for further processing

> ls /home/analyst/reports | grep users
  all files and contents in reports subdirectories are redirected to search for users and returns files that contain specified string
EX:
  grep error time_logs.txt

-
Find: search for files or directories based on attributes
  specific string in the name (prints all the lines containing this)
  certain file size
  when files/directories were last modified with certain timee frame
> This is all enabled by options 
  find -name "example.txt"

-name: case sensitive
  /home/analyst/projects -iname "*log*"
-inmame: not case sensitive
  would return log and LOG
-mtime: when a file was last modified based on days
  mtime +1 indicates all files or directories last modified more than one day ago
  mtime -1 last modified less than one day ago
-mmin: searched based on minuets

-
Create and modify directories and files
mkdir <directory name>: create directory
rmdir <directory name>: removes directory

touch <file name>: creates file
rm: removes files

mv: moves file / directory into new location
  we must be in the pwd where the file is currently located at
  mv <filing we are moving> <new file location>
cp: copies file / directory into new location
  we must be in the pwd where the file is currently located at
  mv <filing we are moving> <file copy>
      mv /home/user/downloads/file1.txt /home/user/docs/
      [I can also move and copy the file from anywhere]

[mv can also be created to rename files by passiong the new name instread of location]

nano: file editor
  doens't auto save: Ctrl + O.


> Using echo and redirection for file maniup
"|" ">"

Append: echo "last updated date" >> permissions.txt 
  appends “last updated date” to the file contents
Overwrite: Entering echo "time" > permissions.txt 
  overwrites the entire file contents of permissions.txt 

Use | when you need to send the output from one command to another command (e.g., grep, awk, etc.).
Use > when you need to overwrite a file with the output.
Use >> when you need to append to a file without erasing the current content

-
Authenticate and authorize users


authenticating and authorizing users
  add and delete users from the systems and option to files they are














